<%
  const component = locals.component;
  const helpers = locals.helpers;
-%>

---

# <%= helpers.autoGeneratedHeader.doNotModify %>
# <%= helpers.autoGeneratedHeader.generatedFrom(component.filePath) %>
sidebar_label: <%- component.name -%>

---

# `<%- component.type === "component" ? `<${component.name} />` : component.name %>`
<%- helpers.replaceNewLine(component.description) %>

<%_ if (component.props && component.props.length) { _%>
## Props
| Prop | Type | Default | Required | Description |
| ---- | :--: | :-----: | :------: | ----------- |
<%- helpers.propMarkdownTableRows(component) %>
<%_ } _%>

<%_ if (component.methods && component.methods.length) { _%>
## Methods
<%_ for (let method of component.methods) { _%>
### <%- helpers.getMarkdownMethodSignature(method) %>

<%- helpers.replaceNewLine(method.description) %>

<%_ if (method.params && method.params.length) { _%>
#### Arguments
| Name | Type | Required | Description |
| ---- | :--: | :------: | ----------- |
<%- helpers.methodMarkdownTableRow(method) %>
<%_ } _%>

<%- helpers.getMarkdownMethodExamples(method) %>
<%_ } _%>
<%_ } _%>

<%_ if (component.styles && component.styles.length) { _%>
## Styles

<%_ for (let i = 0; i < component.styles.length; i++) { _%>
<%
const style = component.styles[i];
-%>
* <a href="#name<%- i > 0 ? '-' + i : '' -%>">`<%- style.name %>`</a><br/>
<%_ } _%>

<%_ for (let style of component.styles) { _%>

### `<%- style.name %>`

<%- style.description %>

<dl>
    <dt>Type</dt>
    <dd>
        <code><%- style.type %></code>
    </dd>
    <%_ if (helpers.exists(style.default)) { _%>
        <dt>Default Value</dt>
        <dd><code><%= helpers.getStyleDefaultValue(style) %></code></dd>
    <%_ } _%>
    <%_ if (style.type === 'enum') { _%>
    <dt>Supported Values</dt>
    <dd>
        <ul>
            <%_ for (var i = 0; i < style.values.length; i++) { _%>
                <li>
                    <code><%- style.values[i].value %></code>: <%- style.values[i].doc %>
                </li>
            <%_ } _%>
        </ul>
    </dd>
    <%_ } _%>
    <%_ if (helpers.exists(style.units)) { _%>
        <dt>Units</dt>
        <dd><code><%- style.units %></code></dd>
    <%_ } _%>
    <%_ if (helpers.exists(style.minimum)) { _%>
        <dt>Minimum</dt>
        <dd><code><%- style.minimum %></code></dd>
    <%_ } _%>
    <%_ if (helpers.exists(style.maximum)) { _%>
        <dt>Maximum</dt>
        <dd><code><%- style.maximum %></code></dd>
    <%_ } _%>
    <%_ if (style.requires.length) { _%>
        <dt>Requires</dt>
        <dd><code><%- style.requires.join(', ') %></code></dd>
    <%_ } _%>
    <%_ if (style.disabledBy.length) { _%>
        <dt>Disabled By</dt>
        <dd><code><%- style.disabledBy.join(', ') %></code></dd>
    <%_ } _%>
    <%_ if (style.allowedFunctionTypes.length) { _%>
        <dt>Supported Style Functions</dt>
        <dd><code><%- style.allowedFunctionTypes.join(', ') %></code></dd>
    <%_ } _%>
    <%_ if (style.expression) { _%>
        <dt>Expression Parameters</dt>
        <dd><code><%- (style.expression.parameters || []).join(', ') %></code></dd>
    <%_ } _%>
</dl>

<%_ if (style.transition) { _%>
### `<%- style.name %>Transition`

The transition affecting any changes to this layerâ€™s <%- style.name %> property.

<dl>
  <dt>Type</dt>
  <dd>
    <code>&lcub; duration, delay &rcub;</code>
  </dd>

  <dt>Units</dt>
  <dd>
    <code>milliseconds</code>
  </dd>

  <dt>Default Value</dt>
  <dd>
    <code>&lcub; duration: 300, delay: 0 &rcub;</code>
  </dd>
</dl>
<%_ } %>
<%_ } _%>
<%_ } _%>
